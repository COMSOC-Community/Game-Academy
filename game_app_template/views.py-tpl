from django.http import Http404
from django.shortcuts import render, get_object_or_404

from core.authorisations import is_session_admin
from core.models import Session, Game, Player

from .apps import NAME
from .models import Answer


def index(request, session_url_tag, game_url_tag):
    session = get_object_or_404(Session, url_tag=session_url_tag)
    game = get_object_or_404(
        Game, session=session, url_tag=game_url_tag, game_type=NAME
    )
    context = {"session": session, "game": game, "admin_user": is_session_admin(session, request.user)}
    try:
        player = Player.objects.get(session=session, user=request.user)
        context["player"] = player
        answer = Answer.objects.get(game=game, player=player)
        context["answer"] = answer
    except (Player.DoesNotExist, Answer.DoesNotExist):
        pass


def submit_answer(request, session_url_tag, game_url_tag):
    session = get_object_or_404(Session, url_tag=session_url_tag)
    game = get_object_or_404(
        Game, session=session, url_tag=game_url_tag, game_type=NAME
    )
    admin_user = is_session_admin(session, request.user)

    if not game.visible and not admin_user:
        raise Http404
    if not request.user.is_authenticated:
        raise Http404


def results(request, session_url_tag, game_url_tag):
    session = get_object_or_404(Session, url_tag=session_url_tag)
    game = get_object_or_404(
        Game, session=session, url_tag=game_url_tag, game_type=NAME
    )
    admin_user = is_session_admin(session, request.user)

    if not game.visible and not admin_user:
        raise Http404
    if not request.user.is_authenticated:
        raise Http404

    